{
  "extends": [
    "next/core-web-vitals"
    // "eslint:recommended",
    // "plugin:react/recommended",
    // "plugin:jest/recommended"
  ],
  "overrides": [
    {
      "files": ["**/*.spec.ts", "**/*.spec.tsx", "**/*.test.tsx"],
      "env": {
        "jest": true
      }
    }
  ],
  "rules": {
    "react-hooks/exhaustive-deps": 0,
    "react/prop-types": 0,
    "no-await-in-loop": 0,
    "no-empty": 0, // no empty blocks like catch(err){}
    "no-useless-escape": 0, // disallows unnecessary escape characters
    "no-debugger": 0,
    "no-console": 0,
    "no-unused-vars": [
      0
    ],
    "filenames-simple/naming-convention": [
      0,
      {
        "rule": "CamelCase"
        // "excepts": []
      }
    ],
    "react/sort-comp": [
      1,
      {
        "order": [
          "static-methods",
          "state", // Initialize State Variables
          "refs", // Create Refs
          "instance-variables", // Use this for hooks and other instance variables
          "lifecycle", // useEffect can be considered part of lifecycle
          "everything-else", // This can include const/var/let specific to Component
          "render"
        ],
        "groups": {
          "lifecycle": [
            "componentDidMount",
            "shouldComponentUpdate",
            "componentDidUpdate",
            "componentWillUnmount"
            // Other lifecycle methods can be added here
          ]
        }
      }
    ],
    "simple-import-sort/imports": 1,
    "simple-import-sort/exports": 1
    // "eslint-plugin-eslint-plugin/order-in-components": [
    //   "error",
    //   {
    //     "groups": [
    //       "state",
    //       "refs",
    //       "hooks",
    //       "useEffects",
    //       "constants",
    //       "functions",
    //       "render"
    //     ],
    //     "alphabetize": {
    //       "order": "asc",
    //       "caseInsensitive": true
    //     }
    //   }
    // ]
  },
  "plugins": [
    "jest",
    "eslint-plugin-jest",
    "filenames-simple",
    "simple-import-sort"
  ],
  "env": {
    "jest/globals": true,
    "jest": true
  },
  "settings": {
    "jest": {
      "globalAliases": {
        "describe": ["context"],
        "fdescribe": ["fcontext"],
        "xdescribe": ["xcontext"],
        "it": ["context"],
        "expect": ["context"],
        "afterEach": ["context"]
      }
    }
  }
}
